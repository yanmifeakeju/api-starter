name: Deploy Fly

on:
  push:
    branches:
      - live

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run Tests
        run: |
          ls -l
          pnpm test
          ls -l ./src/databases/postgres/schema
      - name: Package DB Schema Folder
        uses: actions/upload-artifact@v2
        with:
          name: schema-artifact
          path: ./src/databases/postgres/schema # Check if this path is correct

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Download DB Schema Folder
        if: github.ref == 'refs/heads/live' && needs.test.result == 'success'
        uses: actions/download-artifact@v2
        with:
          name: schema-artifact
          path: ./src/databases/postgres/schema # Check if this path is correct

      - name: Deploy
        run: |
          echo "Deploying to live branch"
          flyctl deploy
env:
  NODE_ENV: test
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  RESEND_API_KEY: ${{secrets.RESEND_API_KEY}}
  AUTH_JWT_SECRET: ${{secrets.AUTH_JWT_SECRET}}
  SERVER_PORT: ${{vars.SERVER_PORT}}
  JWT_EXPIRES_IN: ${{vars.JWT_EXPIRES_IN}}
  FLY_API_TOKEN: ${{secrets.FLY_API_TOKEN}}
  REDIS_URL: ${{secrets.REDIS_URL}}
  MONGO_URI: ${{secrets.MONGO_URI}}
